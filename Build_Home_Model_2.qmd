---
title: "Build Home Model 2"
author: "Alan Jackson"
format: html
editor: visual
---


## Build a Home model

Home will be a function of Temperature, vacation, and time of day

```{r initialize}

library(tidyverse)
library(lubridate)
library(scales)
library(gt)

path <- "/home/ajackson/Dropbox/Rprojects/Tulane_Solar/Data/"

tz <- "America/Chicago"

Smart <- readRDS(paste0(path, "Smart.rds"))
Vaca <- readRDS(paste0(path, "Vacation.rds"))
Weather <- readRDS(paste0(path, "Weather.rds")) %>% 
  filter(Date>lubridate::mdy_hms("01-01-2021T00:00:00")) %>% 
  filter(!is.na(Temperature))
Solar_old <- readRDS(paste0(path, "Solar_old.rds"))
Solar_new <- readRDS(paste0(path, "Solar_new.rds"))

Solar_old <- Solar_old %>% #    Clean up old data and calc Max values by time
  # filter(Solar_W<6000) %>% 
  mutate(behind=lag(Solar_W, default=0)) %>% 
  mutate(kW = Solar_W/1000) %>% 
  rowwise() %>% 
    mutate(kWh=mean(Solar_W, behind)/4000) %>% 
  # mutate(kWh=(0.25*(min(Solar_W, behind)) + 
  #            0.125*(abs(Solar_W-behind)))/1000) %>% 
  ungroup() %>% 
  mutate(Date=date(Timestamp)) %>%
  mutate(Hour=hour(Timestamp) + trunc(minute(Timestamp)/15)*0.25) %>% 
  mutate(Month=month(Timestamp), Day=day(Timestamp)) 


Solar_new <- Solar_new %>% 
  mutate(Hour=hour(Timestamp) + trunc(minute(Timestamp)/15)*0.25) %>% 
  group_by(date(Timestamp), Hour) %>% #    Convert to 15 minute kWh
    summarize(Timestamp=first(Timestamp),
              SolarkWh=mean(Solar_W)/4000,
              SolarkW=sum(Solar_W)/1000,
              BatterykWh=mean(Battery_W)/4000,
              BatterykW=sum(Battery_W)/1000,
              GridkWh=mean(Grid_W)/4000,
              GridkW=sum(Grid_W)/1000) %>% 
  ungroup() %>% 
  select(-`date(Timestamp)`) %>% 
  mutate(HomekWh = GridkWh + SolarkWh + BatterykWh) %>% 
  mutate(HomekW = GridkW + SolarkW + BatterykW)


Smart <- Smart %>% 
  mutate(Usage=Consumption - Generation) %>% 
  filter(!is.na(Usage)) %>% 
  mutate(Vacation=if_else(lubridate::as_date(Date) %in% Vaca, TRUE, FALSE))

```

## Clean up Weather data

All I need is temperature every 15 minutes

```{r weather}

tz <- "America/Chicago"

xout <- seq(mdy_hm("01-01-2021T00:00", tz="UTC"),
            mdy_hm("12-31-2022T00:00", tz="UTC"),
            by=15*60)

Weather_T <- approx(Weather$Date, Weather$Temperature, xout=xout, rule=2)

Weather_trp <- as_tibble(bind_cols(Date=Weather_T$x, 
                    Temperature=Weather_T$y))

```

##        Combine Smartmeter and Solar to get Home

Problems. Solar output is instantaneous, so it can be briefly shaded in any 15
minute period leading to an anomalously small output value, but the smart meter
data is the integrated kWh value.

So drop any day with negative values for the Home, and apply a smoother to the
rest?